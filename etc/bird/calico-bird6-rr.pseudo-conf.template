
router id @MY_IPV4_ADDRESS@;

# Filters

## tap*, veth*, dummy1 are networks we want to advertise
## community strings:
## @AS_NUMBER@:@NO_ADVERT@ - do not advertise via bgp
## @AS_NUMBER@:@ADVERT@ - advertise it


filter export_bgp {
# if a route is tagged with the export community string, then we will export it,
# first stripping off the community strings (we don't want to leak internal Calico
# community strings - they may conflict with other bits of infra - we can't assume the
# operator has impecible BGP hygine.
# All other routes are rejected (not exported).

if (@AS_NUMBER@,@ADVERT@) ~ bgp_community then 
   { 
     bgp_community.empty;
     accept;
   } else {
      reject;
   }
}

# We need one of these per peer rr or other router in the network that we are peering with

protocol bgp N1 {
  description "Connection to BGP peer";
  local as @AS_NUMBER@;
  neighbor @RR_IP_ADDRESS@ as @AS_NUMBER@;
  import all;
  export filter export_bgp;
  source address @MY_IP_ADDRESS@;  # The local address we use for the TCP connection
}

# Peer with my route-reflector clients, one per client

protocol bgp N1 {
  description "Route Reflector client";
  local as @AS_NUMBER@;
  neighbor @RRC_IP_ADDRESS@ as @AS_NUMBER@;
  import all;
  export filter export_bgp;
  source address @MY_IP_ADDREFSS@;
  rr client;
}
